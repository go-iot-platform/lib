// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: statistic/statistic.proto

package statistic

import (
	api "github.com/go-iot-platform/lib/proto/api"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_statistic_statistic_proto protoreflect.FileDescriptor

var file_statistic_statistic_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x1a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x6f, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xcf, 0x05, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x76, 0x63, 0x12, 0x39, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0f, 0x2e,
	0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x50, 0x49, 0x12,
	0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x14, 0x53,
	0x65, 0x6e, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x41, 0x50, 0x49, 0x12, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0f, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x0f, 0x2e, 0x67,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x10, 0x53, 0x6e, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x0f, 0x2e, 0x67,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x0e, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x12, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x13, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x0f, 0x2e, 0x67, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x12, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x57, 0x65, 0x65, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x12, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x42, 0x65, 0x64, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x54, 0x69,
	0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x0f, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x3b, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_statistic_statistic_proto_goTypes = []interface{}{
	(*api.Request)(nil),  // 0: go.api.Request
	(*api.Response)(nil), // 1: go.api.Response
}
var file_statistic_statistic_proto_depIdxs = []int32{
	0,  // 0: go.micro.api.statistic.SystemSvc.GetCallingActivating:input_type -> go.api.Request
	0,  // 1: go.micro.api.statistic.SystemSvc.GetCountAPI:input_type -> go.api.Request
	0,  // 2: go.micro.api.statistic.SystemSvc.GetMapDirectionAPI:input_type -> go.api.Request
	0,  // 3: go.micro.api.statistic.SystemSvc.SendObserverEmailAPI:input_type -> go.api.Request
	0,  // 4: go.micro.api.statistic.SystemSvc.GetChartData:input_type -> go.api.Request
	0,  // 5: go.micro.api.statistic.SystemSvc.HistoryBySerial:input_type -> go.api.Request
	0,  // 6: go.micro.api.statistic.SystemSvc.HeartRateStatistic:input_type -> go.api.Request
	0,  // 7: go.micro.api.statistic.SystemSvc.SnoringStatistic:input_type -> go.api.Request
	0,  // 8: go.micro.api.statistic.SystemSvc.SleepStatistic:input_type -> go.api.Request
	0,  // 9: go.micro.api.statistic.SystemSvc.SleepMonthStatistic:input_type -> go.api.Request
	0,  // 10: go.micro.api.statistic.SystemSvc.SleepWeekStatistic:input_type -> go.api.Request
	0,  // 11: go.micro.api.statistic.SystemSvc.BedSensorLog:input_type -> go.api.Request
	0,  // 12: go.micro.api.statistic.SystemSvc.TimeLine:input_type -> go.api.Request
	1,  // 13: go.micro.api.statistic.SystemSvc.GetCallingActivating:output_type -> go.api.Response
	1,  // 14: go.micro.api.statistic.SystemSvc.GetCountAPI:output_type -> go.api.Response
	1,  // 15: go.micro.api.statistic.SystemSvc.GetMapDirectionAPI:output_type -> go.api.Response
	1,  // 16: go.micro.api.statistic.SystemSvc.SendObserverEmailAPI:output_type -> go.api.Response
	1,  // 17: go.micro.api.statistic.SystemSvc.GetChartData:output_type -> go.api.Response
	1,  // 18: go.micro.api.statistic.SystemSvc.HistoryBySerial:output_type -> go.api.Response
	1,  // 19: go.micro.api.statistic.SystemSvc.HeartRateStatistic:output_type -> go.api.Response
	1,  // 20: go.micro.api.statistic.SystemSvc.SnoringStatistic:output_type -> go.api.Response
	1,  // 21: go.micro.api.statistic.SystemSvc.SleepStatistic:output_type -> go.api.Response
	1,  // 22: go.micro.api.statistic.SystemSvc.SleepMonthStatistic:output_type -> go.api.Response
	1,  // 23: go.micro.api.statistic.SystemSvc.SleepWeekStatistic:output_type -> go.api.Response
	1,  // 24: go.micro.api.statistic.SystemSvc.BedSensorLog:output_type -> go.api.Response
	1,  // 25: go.micro.api.statistic.SystemSvc.TimeLine:output_type -> go.api.Response
	13, // [13:26] is the sub-list for method output_type
	0,  // [0:13] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_statistic_statistic_proto_init() }
func file_statistic_statistic_proto_init() {
	if File_statistic_statistic_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_statistic_statistic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_statistic_statistic_proto_goTypes,
		DependencyIndexes: file_statistic_statistic_proto_depIdxs,
	}.Build()
	File_statistic_statistic_proto = out.File
	file_statistic_statistic_proto_rawDesc = nil
	file_statistic_statistic_proto_goTypes = nil
	file_statistic_statistic_proto_depIdxs = nil
}
